// Created: 2025-05-23
#include "MyUtils.h"

/*63. 不同路径 II
给定一个 m x n 的整数数组 grid。一个机器人初始位于 左上角（即 grid[0][0]）。
机器人尝试移动到 右下角（即 grid[m - 1][n - 1]）。机器人每次只能向下或者向右移动一步。
网格中的障碍物和空位置分别用 1 和 0 来表示。机器人的移动路径中不能包含 任何 有障碍物的方格。
返回机器人能够到达右下角的不同路径数量。
测试用例保证答案小于等于 2 * 10 ^ 9。*/

class Solution1 {
public:
	int uniquePathsWithObstacles(vector<vector<int>> &obstacleGrid) {
		int m = obstacleGrid.size(), n = obstacleGrid[0].size();
		obstacleGrid.back().back() = !obstacleGrid.back().back();
		for(int i = m - 2; i >= 0; --i) {
			if(obstacleGrid[i][n - 1] != 1) {
				obstacleGrid[i][n - 1] = obstacleGrid[i + 1][n - 1];
			} else {
				obstacleGrid[i][n - 1] = 0;
			}
		}
		for(int j = n - 2; j >= 0; --j) {
			if(obstacleGrid[m - 1][j] != 1) {
				obstacleGrid[m - 1][j] = obstacleGrid[m - 1][j + 1];
			} else {
				obstacleGrid[m - 1][j] = 0;
			}
		}
		for(int i = m - 2; i >= 0; --i) {
			for(int j = n - 2; j >= 0; --j) {
				if(obstacleGrid[i][j] != 1) {
					if(INT_MAX - obstacleGrid[i + 1][j] < obstacleGrid[i][j + 1]) {
						// 测试用例保证答案小于等于 2*10^9。因此当前值一定会被舍弃，随便填个值就行
						obstacleGrid[i][j] = INT_MAX;
					} else {
						obstacleGrid[i][j] = obstacleGrid[i + 1][j] + obstacleGrid[i][j + 1];
					}
				} else {
					obstacleGrid[i][j] = 0;
				}
			}
		}
		return obstacleGrid[0][0];
	}
};

class Solution2 {
public:
	int uniquePathsWithObstacles(vector<vector<int>> &obstacleGrid) {
		int n = obstacleGrid.size(), m = obstacleGrid.at(0).size();
		vector<int> f(m);

		f[0] = (obstacleGrid[0][0] == 0);
		for(int i = 0; i < n; ++i) {
			for(int j = 0; j < m; ++j) {
				if(obstacleGrid[i][j] == 1) {
					f[j] = 0;
					continue;
				}
				if(j - 1 >= 0 && obstacleGrid[i][j - 1] == 0) {
					if(INT_MAX - f[j - 1] < f[j]) {
						f[j] = INT_MAX;
					} else {
						f[j] += f[j - 1];
					}
				}
			}
		}

		return f.back();
	}
};

int main() {
	Solution sol;
	vector<vector<int>> obs = { { 0,
		                            0,
		                            0,
		                            1,
		                            0,
		                            0,
		                            0,
		                            0,
		                            0,
		                            1,
		                            0,
		                            0,
		                            0,
		                            0,
		                            0,
		                            1,
		                            0,
		                            1,
		                            1,
		                            0,
		                            0,
		                            1,
		                            0,
		                            1,
		                            1,
		                            0,
		                            1,
		                            0,
		                            0,
		                            1,
		                            0,
		                            0,
		                            0,
		                            1,
		                            0,
		                            0 },
		{ 0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0 },
		{ 1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    1,
		    0,
		    1,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0 },
		{ 1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    1 },
		{ 0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0 },
		{ 0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0 },
		{ 0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    1,
		    1,
		    0,
		    1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0 },
		{ 1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    1,
		    1,
		    0,
		    0,
		    0,
		    1 },
		{ 0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    1,
		    1,
		    1,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    1,
		    1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0 },
		{ 0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    1,
		    1,
		    0,
		    1,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    0 },
		{ 1,
		    0,
		    1,
		    0,
		    1,
		    1,
		    0,
		    1,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    1,
		    1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    1,
		    0 },
		{ 0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    1 },
		{ 0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0 },
		{ 1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0 },
		{ 0,
		    0,
		    1,
		    0,
		    1,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0 },
		{ 0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    1,
		    1,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0 },
		{ 0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0 },
		{ 0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0 },
		{ 0,
		    0,
		    1,
		    0,
		    1,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    1,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0 },
		{ 0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0 },
		{ 0,
		    0,
		    0,
		    1,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    1,
		    1,
		    0,
		    1,
		    1,
		    1,
		    0,
		    0,
		    1,
		    0,
		    1,
		    0,
		    1,
		    1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0 },
		{ 0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0 },
		{ 0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0 },
		{ 0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0 },
		{ 1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0 },
		{ 0,
		    1,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0 },
		{ 0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    1,
		    0,
		    1,
		    1,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    1,
		    1,
		    0,
		    0 },
		{ 0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    1,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0,
		    0 } };
	cout << sol.uniquePathsWithObstacles(obs);
}
